{"version":3,"sources":["networking/HTTPservice.js","networking/users.js","components/PageHeader.jsx","components/PageTitle.jsx","components/Input.jsx","components/Container.jsx","components/BottomButton.jsx","pages/Login.jsx","networking/deliveries.js","networking/warehouses.js","components/Button.jsx","pages/HomeDepot.jsx","pages/HomeWarehouse.jsx","components/GoBack.jsx","pages/TicketNumber.jsx","components/DeliveryTable.jsx","components/ChemicalsDeliveryTable.jsx","components/TableRow.jsx","pages/TicketDetails.jsx","pages/CreateJob.jsx","pages/SelectCompanyJob.jsx","pages/SelectDriver.jsx","pages/SelectTruck.jsx","pages/SelectChemicals.jsx","pages/FinalizeCreateJob.jsx","components/MaxCapacityStorage.jsx","components/AvailableCapacityStorage.jsx","components/InStockStorage.jsx","pages/CheckStorage.jsx","components/SelectInput.jsx","components/TableRowDeliveries.jsx","components/DeliveriesTable.jsx","pages/AllDeliveries.jsx","pages/UpcomingDeliveries.jsx","pages/WarehousesOverview.jsx","pages/RejectTicket.jsx","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","baseURL","headers","common","login","data","a","post","StyledHeader","styled","h3","PageHeader","props","name","Wrapper","div","StyledPageTitle","h4","PageTitle","StyledInput","input","Input","className","type","placeholder","onChange","StyledDivWrapper","StyledDiv","StyledDivContent","Container","children","StyledButton","button","ButtonPosition","ButtonWrapper","BottomButton","onClick","Login","useState","username","setUsername","password","setPassword","history","useHistory","loginUser","localStorage","setItem","response","warehouse_id","push","console","log","e","target","value","localhost","getDeliveries","get","getActualDeliveries","getUpcomingDeliveries","ticket","ticketNumber","confirmDepotTicket","checkCreate","deliveries","warehouses","Button","HomeDepot","deliveryData","setDeliveryData","actualDeliveryData","setActualDeliveryData","warehouseData","setWarehouseData","upcomingDeliveries","setUpcomingDeliveries","useEffect","getItem","getDeliveryData","getWarehouseData","getCorrectDeliveries","getUpcomingTrucks","clear","delivery","actualDeliveries","removeItem","HomeWarehouse","storage","setStorage","getData","GoBackStyle","Arrow","i","GoBack","goBack","Ticket","setTicketNumber","checkTicket","alert","RowName","Row","DeliveryTable","arrival","drivers","truck","TableName","h5","ChemicalsDeliveryTable","TableRowStyled","TableRow","chemical","quantity","warehouse","isle","ButtonContainer","TicketDetails","deliveryStock","setDeliveryStock","ticketno","setTicketno","deliveryType","setDeliveryType","setDrivers","plateNumber","setPlateNumber","setArrival","useParams","ticket_no","time","confirmTicket","rejectTicket","map","driver","key","firstName","chemicalName","warehouseNumber","CreateJob","useLocation","state","deliveryJob","deliveryTypes","id","SelectCompanyJob","location","companies","company","companyID","SelectDriver","selectDriver","SelectTruck","trucks","plate_no","selectTruck","SelectChemicals","chemicalAAmount","setChemicalAAmount","chemicalBAmount","setChemicalBAmount","chemicalCAmount","setChemicalCAmount","chemicalAName","chemicalBName","chemicalCName","chemicalAID","chemicalBID","chemicalCID","chemicals","parseInt","message","FinalizeCreateJob","filteredData","possibleStorage","filter","arrayDriver","sendData","companyId","truckId","ticketNo","oneStorage","warehouseId","RowData","MaxCapacityStorage","capacity","AvailableCapacityStorage","InStockStorage","CheckStorage","warehouse_number","warehouse_total_capacity","warehouse_current_storage","StyledSelect","select","SelectInput","options","option","deliveryDate","companyName","FilterBox","JobsBox","AllDeliveries","moment","add","format","fromDateList","toDateList","setDeliveries","from","to","caseHandler","depot","form","setForm","onChangeForm","prop","event","users","Object","keys","depots","DeliveriesTable","length","TableRowDeliveries","date_scheduled","style","textAlign","arrayToReturn","some","stock","isAfter","isBefore","depot_id","Number","onAddFilter","StyledTimespan","UpcomingDeliveries","dateScheduled","WarehousesContainer","WarehouseButton","WarehousesOverview","index","goToWarehouseStorage","RejectHeader","RejectTicket","rejectReasons","color","App","basename","exact","path","component","TicketNumber","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"4UAEaA,EAAe,SAACC,GAC3BC,IAAMC,SAASC,QAAU,qDACzBF,IAAMC,SAASE,QAAQC,OAAvB,cAAiDL,GCCtCM,EAAK,uCAAG,WAAOC,GAAP,SAAAC,EAAA,+EACZP,IAAMQ,KAAN,UAHS,qDAGT,OAJG,SAIH,UAAuCF,IAD3B,2CAAH,sD,oNCFlB,IAAMG,EAAeC,IAAOC,GAAV,KAaHC,EAHI,SAACC,GAClB,OAAO,kBAACJ,EAAD,KAAeI,EAAMC,O,mSCX9B,IAAMC,EAAUL,IAAOM,IAAV,KAOPC,EAAkBP,IAAOQ,GAAV,KAeNC,EARG,SAACN,GACjB,OACE,kBAACE,EAAD,KACE,kBAACE,EAAD,KAAkBJ,EAAMC,Q,6XCjB9B,IAAMM,EAAcV,IAAOW,MAAV,KA4BFC,EAXD,SAACT,GACb,OACE,kBAACO,EAAD,CACEG,UAAU,cACVC,KAAMX,EAAMW,KACZC,YAAaZ,EAAMY,YACnBC,SAAUb,EAAMa,Y,unBCvBtB,IAAMC,EAAmBjB,IAAOM,IAAV,KAMhBY,EAAYlB,IAAOM,IAAV,KAkBTa,EAAmBnB,IAAOM,IAAV,KAgBPc,EAVG,SAACjB,GACjB,OACE,kBAACc,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAmBhB,EAAMkB,a,4hBClCjC,IAAMC,EAAetB,IAAOuB,OAAV,KAYZC,EAAiBxB,IAAOM,IAAV,KAOdmB,EAAgBzB,IAAOM,IAAV,KAeJoB,EAVM,SAACvB,GACpB,OACE,kBAACqB,EAAD,KACE,kBAACC,EAAD,KACE,kBAACH,EAAD,CAAcK,QAASxB,EAAMwB,SAAUxB,EAAMC,SCyBtCwB,EA5CD,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACXC,EADW,KACDC,EADC,OAEcF,mBAAS,IAFvB,mBAEXG,EAFW,KAEDC,EAFC,KAIZC,EAAUC,cAEVC,EAAS,uCAAG,8BAAAvC,EAAA,+EAESF,EAAM,CAAEmC,WAAUE,aAF3B,gBAENpC,EAFM,EAENA,KACRR,EAAaQ,EAAKP,OAClBgD,aAAaC,QAAQ,QAAS1C,EAAKP,OAEA,OAA/BO,EAAK2C,SAASC,aAChBN,EAAQO,KAAK,eAC2B,OAA/B7C,EAAK2C,SAASC,cACvBN,EAAQO,KAAK,mBATD,mFAaZC,QAAQC,IAAI,sBAbA,6EAAH,qDAmBf,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAWvC,KAAK,eAChB,kBAAC,EAAD,CAAYA,KAAK,UACjB,kBAAC,EAAD,CACEU,KAAK,OACLC,YAAY,WACZC,SAAU,SAAC4B,GAAD,OAAOb,EAAYa,EAAEC,OAAOC,UAExC,kBAAC,EAAD,CACEhC,KAAK,WACLC,YAAY,WACZC,SAAU,SAAC4B,GAAD,OAAOX,EAAYW,EAAEC,OAAOC,UAExC,kBAAC,EAAD,CAAcnB,QAASS,EAAWhC,KAAK,YChDvC2C,EAAY,oDAELC,EAAa,uCAAG,WAAOpD,GAAP,SAAAC,EAAA,+EACpBP,IAAM2D,IAAN,UAAaF,GAAb,OAJG,cAIH,SAAqCnD,IADjB,2CAAH,sDAIbsD,EAAmB,uCAAG,sBAAArD,EAAA,+EAC1BP,IAAM2D,IAAN,UAAaF,GAAb,OARG,iBAOuB,2CAAH,qDAInBI,EAAqB,uCAAG,sBAAAtD,EAAA,+EAC5BP,IAAM2D,IAAN,UAAaF,EAAb,yBAD4B,2CAAH,qDAIrBK,EAAM,uCAAG,WAAOC,GAAP,SAAAxD,EAAA,+EACbP,IAAM2D,IAAN,UAAaF,GAAb,OAhBG,cAgBH,mBAAuCM,KAD1B,2CAAH,sDAINC,EAAkB,uCAAG,WAAO1D,GAAP,SAAAC,EAAA,6DAChC6C,QAAQC,IAAI/C,GADoB,kBAEzBN,IAAMQ,KAAN,UAAciD,GAAd,OArBG,cAqBH,YAAyCnD,IAFhB,2CAAH,sDAKlB2D,EAAW,uCAAG,WAAO3D,GAAP,SAAAC,EAAA,+EAClBP,IAAMQ,KAAN,UAAciD,GAAd,OAzBG,cAyBH,gBAA6CnD,IAD3B,2CAAH,sDAIX4D,EAAU,uCAAG,WAAO5D,GAAP,SAAAC,EAAA,+EACjBP,IAAMQ,KAAN,UAAciD,GAAd,OA7BG,eA6B8BnD,IADhB,2CAAH,sDCzBV6D,EAAU,uCAAG,WAAO7D,GAAP,SAAAC,EAAA,+EACjBP,IAAM2D,IAAN,UAHS,qDAGT,OAJG,eAI6BrD,IADf,2CAAH,sD,iaCFvB,IAAM0B,GAAetB,IAAOuB,OAAV,MAsBHmC,GAJA,SAACvD,GACd,OAAO,kBAAC,GAAD,CAAcwB,QAASxB,EAAMwB,SAAUxB,EAAMC,OCqHvCuD,GA5HG,WAAO,IAAD,EACkB9B,mBAAS,IAD3B,mBACf+B,EADe,KACDC,EADC,OAE8BhC,mBAAS,IAFvC,mBAEfiC,EAFe,KAEKC,EAFL,OAGoBlC,mBAAS,IAH7B,mBAGfmC,EAHe,KAGAC,EAHA,OAI8BpC,mBAAS,IAJvC,mBAIfqC,EAJe,KAIKC,EAJL,KAKhBjC,EAAUC,cAEhBiC,qBAAU,WACR,IAAM/E,EAAQgD,aAAagC,QAAQ,SAE/BhF,GACFD,EAAaC,GAEfiF,IACAC,IACAC,IACAC,MACC,IAEH,IAAMH,EAAe,uCAAG,8BAAAzE,EAAA,+EAEGmD,IAFH,gBAEZpD,EAFY,EAEZA,KACRiE,EAAgBjE,GAChB8C,QAAQC,IAAI,wCACZD,QAAQC,IAAI,oBAAqB/C,EAAK2C,UACtCG,QAAQC,IAAI,wCANQ,kDAQpB,OACEN,aAAaqC,QACbxC,EAAQO,KAAK,MAVK,0DAAH,qDAefgC,EAAiB,uCAAG,8BAAA5E,EAAA,+EAECsD,IAFD,gBAEdvD,EAFc,EAEdA,KACRuE,EAAsBvE,GACtB8C,QAAQC,IAAI,wCACZD,QAAQC,IAAI,+BAAgC/C,GAC5C8C,QAAQC,IAAI,wCANU,kDAQtB,KARsB,0DAAH,qDAejB6B,EAAoB,uCAAG,8BAAA3E,EAAA,+EAEFqD,IAFE,gBAEjBtD,EAFiB,EAEjBA,KACRmE,EAAsBnE,GACtB8C,QAAQC,IAAI,MAAO/C,GAJM,gDAMzB,KANyB,yDAAH,qDAapB2E,EAAgB,uCAAG,8BAAA1E,EAAA,+EAEE4D,IAFF,gBAEb7D,EAFa,EAEbA,KACRqE,EAAiBrE,GACjB8C,QAAQC,IAAI,wCACZD,QAAQC,IAAI,qBAAsB/C,EAAK2C,UACvCG,QAAQC,IAAI,wCANS,kDAQrB,OACEN,aAAaqC,QACbxC,EAAQO,KAAK,MAVM,0DAAH,qDAgDtB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAWrC,KAAK,yBAChB,kBAAC,EAAD,CAAYA,KAAK,kBACjB,kBAAC,GAAD,CAAQA,KAAK,sBAAsBuB,QApBR,WAC7BO,EAAQO,KAAK,uBAAwB,CACnCe,WAAYU,EAAmB3B,cAmB/B,kBAAC,GAAD,CAAQnC,KAAK,eAAeuB,QAtCZ,WAClBO,EAAQO,KAAK,qBAsCX,kBAAC,GAAD,CAAQrC,KAAK,aAAauB,QAnCZ,WAChBO,EAAQO,KAAK,cAAe,CAC1BkC,SAAUf,EAAarB,cAkCvB,kBAAC,GAAD,CAAQnC,KAAK,sBAAsBuB,QAjBZ,WACzBO,EAAQO,KAAK,uBAAwB,CACnCgB,WAAYO,OAgBZ,kBAAC,GAAD,CAAQ5D,KAAK,iBAAiBuB,QA/BZ,WACpBO,EAAQO,KAAK,kBAAmB,CAC9BkC,SAAUf,EAAarB,SACvBqC,iBAAkBd,EAAmBN,gBA6BrC,kBAAC,EAAD,CAAcpD,KAAK,SAASuB,QAbb,WACjBU,aAAawC,WAAW,SACxB3C,EAAQO,KAAK,UCnCFqC,GA5EO,WACpB,IAAM5C,EAAUC,cADU,EAEIN,mBAAS,IAFb,mBAEnBkD,EAFmB,KAEVC,EAFU,OAG0BnD,mBAAS,IAHnC,mBAGnBqC,EAHmB,KAGCC,EAHD,KAK1BC,qBAAU,WACM/B,aAAagC,QAAQ,WAGjChC,aAAaqC,QACbxC,EAAQO,KAAK,MAEfwC,IACAR,MACC,IAEH,IAAMQ,EAAO,uCAAG,8BAAApF,EAAA,+EAEW4D,IAFX,gBAEJ7D,EAFI,EAEJA,KACRoF,EAAWpF,EAAK2C,SAAS,IACzBG,QAAQC,IAAI,wCACZD,QAAQC,IAAI,qBAAsB/C,EAAK2C,SAAS,IAChDG,QAAQC,IAAI,wCANA,kDAQZ,KARY,0DAAH,qDAeP8B,EAAiB,uCAAG,8BAAA5E,EAAA,+EAECsD,IAFD,gBAEdvD,EAFc,EAEdA,KACRuE,EAAsBvE,GACtB8C,QAAQC,IAAI,wCACZD,QAAQC,IAAI,+BAAgC/C,GAC5C8C,QAAQC,IAAI,wCANU,kDAQtB,KARsB,0DAAH,qDAiCvB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAWvC,KAAK,6BAChB,kBAAC,EAAD,CAAYA,KAAK,kBACjB,kBAAC,GAAD,CAAQA,KAAK,sBAAsBuB,QATR,WAC7BO,EAAQO,KAAK,uBAAwB,CACnCe,WAAYU,EAAmB3B,cAQ/B,kBAAC,GAAD,CAAQnC,KAAK,iBAAiBuB,QAvBd,WAClBO,EAAQO,KAAK,qBAuBX,kBAAC,GAAD,CAAQrC,KAAK,UAAUuB,QApBN,WACnBO,EAAQO,KAAK,iBAAkB,CAAEsC,eAoB/B,kBAAC,EAAD,CAAc3E,KAAK,SAASuB,QAjBb,WACjBU,aAAawC,WAAW,SACxB3C,EAAQO,KAAK,U,uUChEjB,IAAMyC,GAAclF,IAAOM,IAAV,MAMX6E,GAAQnF,IAAOoF,EAAV,MAiBIC,GATA,WACb,IAAMnD,EAAUC,cAChB,OACE,kBAAC+C,GAAD,CAAavD,QAAS,kBAAMO,EAAQoD,WAClC,kBAACH,GAAD,QCyBSI,GApCA,WAAO,IAAD,EACqB1D,mBAAS,IAD9B,mBACZwB,EADY,KACEmC,EADF,KAEbtD,EAAUC,cAEhBiC,qBAAU,WACR,IAAM/E,EAAQgD,aAAagC,QAAQ,SAE/BhF,GACFD,EAAaC,MAMjB,IAAMoG,EAAW,uCAAG,sBAAA5F,EAAA,yDACbwD,EADa,yCAETqC,MAAM,qCAFG,OAIlBxD,EAAQO,KAAR,0BAAgCY,IAJd,2CAAH,qDAOjB,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,CAAWjD,KAAK,kBAChB,kBAAC,EAAD,CAAYA,KAAK,yBACjB,kBAAC,EAAD,CACEU,KAAK,OACLC,YAAY,gBACZC,SAAU,SAAC4B,GAAD,OAAO4C,EAAgB5C,EAAEC,OAAOC,UAE5C,kBAAC,EAAD,CAAcnB,QAAS8D,EAAarF,KAAK,mB,2aCvC/C,IAAMC,GAAUL,IAAOM,IAAV,MAKPqF,GAAU3F,IAAOM,IAAV,MAOPsF,GAAM5F,IAAOM,IAAV,MAuBMuF,GAjBO,SAAC1F,GACrB,OACE,kBAAC,GAAD,KACE,kBAACwF,GAAD,sBACA,kBAACC,GAAD,KAAMzF,EAAMiD,QACZ,kBAACuC,GAAD,gBACA,kBAACC,GAAD,KAAMzF,EAAM2F,SACZ,kBAACH,GAAD,aACA,kBAACC,GAAD,KAAMzF,EAAMW,MACZ,kBAAC6E,GAAD,gBACA,kBAACC,GAAD,KAAMzF,EAAM4F,SACZ,kBAACJ,GAAD,cACA,kBAACC,GAAD,KAAMzF,EAAM6F,S,obC9BlB,IAAM3F,GAAUL,IAAOM,IAAV,MAKPsF,GAAM5F,IAAOM,IAAV,MAMH2F,GAAYjG,IAAOkG,GAAV,MAkBAC,GAbgB,SAAChG,GAC9B,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC8F,GAAD,iBACA,kBAACA,GAAD,iBACA,kBAACA,GAAD,kBACA,kBAACA,GAAD,gB,0cCvBR,IAAM5F,GAAUL,IAAOM,IAAV,MAKPsF,GAAM5F,IAAOM,IAAV,MAOH8F,GAAiBpG,IAAOM,IAAV,MAmBL+F,GAbE,SAAClG,GAChB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACiG,GAAD,KAAiBjG,EAAMmG,UACvB,kBAACF,GAAD,KAAiBjG,EAAMoG,SAAvB,WACA,kBAACH,GAAD,KAAiBjG,EAAMqG,WACvB,kBAACJ,GAAD,KAAiBjG,EAAMsG,S,2QCZ/B,IAAMC,GAAkB1G,IAAOM,IAAV,MAQfmB,GAAgBzB,IAAOM,IAAV,MA0FJqG,GArFO,WAAO,IAAD,EACgB9E,mBAAS,IADzB,mBACnB+E,EADmB,KACJC,EADI,OAEMhF,mBAAS,IAFf,mBAEnBiF,EAFmB,KAETC,EAFS,OAGclF,mBAAS,IAHvB,mBAGnBmF,EAHmB,KAGLC,EAHK,OAIIpF,mBAAS,IAJb,mBAInBkE,EAJmB,KAIVmB,EAJU,OAKYrF,mBAAS,IALrB,mBAKnBsF,EALmB,KAKNC,EALM,OAMIvF,mBAAS,IANb,mBAMnBiE,EANmB,KAMVuB,EANU,KAOlBhE,EAAiBiE,cAAjBjE,aACFnB,EAAUC,cAEhBiC,qBAAU,WACR,IAAM/E,EAAQgD,aAAagC,QAAQ,SAE/BhF,GACFD,EAAaC,GAEf4F,MACC,IAEH,IAAMA,EAAO,uCAAG,8BAAApF,EAAA,+EAEWuD,EAAOC,GAFlB,gBAEJzD,EAFI,EAEJA,KACR8C,QAAQC,IAAI/C,GACZiH,EAAiBjH,EAAK+E,SAASiC,eAC/BG,EAAYnH,EAAK+E,SAAS4C,WAC1BN,EAAgBrH,EAAK+E,SAASqC,cAC9BE,EAAWtH,EAAK+E,SAASoB,SACzBqB,EAAexH,EAAK+E,SAASqB,MAAMmB,aACnCE,EAAWzH,EAAK+E,SAAS6C,MATb,4GAAH,qDAgBPC,EAAa,uCAAG,8BAAA5H,EAAA,+EAEKyD,EAAmB,CAAED,aAAcyD,IAFxC,gBAEVlH,EAFU,EAEVA,KACR8C,QAAQC,IAAI/C,GACZsC,EAAQO,KAAK,eAJK,gDAMlBiD,MAAM,KAAInD,SAAS3C,KAAK2C,UANN,yDAAH,qDAUbmF,EAAY,uCAAG,sBAAA7H,EAAA,sDACnBqC,EAAQO,KAAK,iBAAkB,CAC7BY,iBAFiB,2CAAH,qDAMlB,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,CAAWjD,KAAK,qBAChB,kBAAC,GAAD,CACEgD,OAAQ0D,EACRhB,QAASA,EACThF,KAAMkG,EACNjB,QAASA,EAAQ4B,KAAI,SAACC,EAAQxC,GAAT,OACnB,uBAAGyC,IAAKzC,GAAIwC,EAAOE,cAErB9B,MAAOmB,IAET,kBAAC,GAAD,MAECP,EAAce,KAAI,SAAChD,EAAUS,GAAX,OACjB,kBAAC,GAAD,CACEyC,IAAKzC,EACLkB,SAAU3B,EAASoD,aACnBxB,SAAU5B,EAASI,QACnByB,UAAW7B,EAASqD,gBACpBvB,KAAK,SAGT,kBAACC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQtG,KAAK,OAAOuB,QAAS,kBAAM8F,OACnC,kBAAC,GAAD,CAAQrH,KAAK,SAASuB,QAAS,kBAAM+F,WCzEhCO,GAzBG,WAChB,IAAM/F,EAAUC,cAEVwC,EADWuD,cACSC,MAAMxD,SAE1ByD,EAAc,SAACpB,GACnB9E,EAAQO,KAAK,uBAAwB,CAAEuE,eAAcrC,cAGvD,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,CAAWvE,KAAK,eAChB,kBAAC,EAAD,CAAYA,KAAK,gBAChBuE,EAAS0D,cAAcV,KAAI,SAAChD,EAAUS,GAAX,OAC1B,kBAAC,GAAD,CACEyC,IAAKzC,EACLhF,KAAMuE,EAASvE,KACfuB,QAAS,kBAAMyG,EAAYzD,EAAS2D,YCY/BC,GA9BU,WACvB,IAAMrG,EAAUC,cACVqG,EAAWN,cACXlB,EAAewB,EAASL,MAAMnB,aAC9BrC,EAAW6D,EAASL,MAAMxD,SAUhC,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,CAAWvE,KAAK,uBAChB,kBAAC,EAAD,CAAYA,KAAK,mBAChBuE,EAAS8D,UAAUd,KAAI,SAACe,EAAStD,GAAV,OACtB,kBAAC,GAAD,CACEyC,IAAKzC,EACLhF,KAAMsI,EAAQtI,KACduB,QAAS,kBAjBEgH,EAiBcD,EAAQJ,QAhBvCpG,EAAQO,KAAK,iBAAkB,CAC7BkC,WACAqC,eACA2B,cAJc,IAACA,UC0BNC,GAhCM,WACnB,IAAM1G,EAAUC,cACVqG,EAAWN,cACXlB,EAAewB,EAASL,MAAMnB,aAC9BrC,EAAW6D,EAASL,MAAMxD,SAC1BgE,EAAYH,EAASL,MAAMQ,UAWjC,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,CAAWvI,KAAK,sBAChB,kBAAC,EAAD,CAAYA,KAAK,kBAChBuE,EAASoB,QAAQ4B,KAAI,SAACC,EAAQxC,GAAT,OACpB,kBAAC,GAAD,CACEyC,IAAKzC,EACLhF,KAAI,kBAAawH,EAAO9F,UACxBH,QAAS,kBAlBI,SAACiG,GACpB1F,EAAQO,KAAK,gBAAiB,CAC5BkC,WACAqC,eACA2B,YACAf,WAamBiB,CAAajB,WCSvBkB,GAlCK,WAClB,IAAM5G,EAAUC,cACVqG,EAAWN,cACXlB,EAAewB,EAASL,MAAMnB,aAC9BrC,EAAW6D,EAASL,MAAMxD,SAC1BgE,EAAYH,EAASL,MAAMQ,UAC3Bf,EAASY,EAASL,MAAMP,OAY9B,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,CAAWxH,KAAK,qBAChB,kBAAC,EAAD,CAAYA,KAAK,iBAChBuE,EAASoE,OAAOpB,KAAI,SAAC3B,EAAOZ,GAAR,OACnB,kBAAC,GAAD,CACEyC,IAAKzC,EACLhF,KAAI,iBAAY4F,EAAMgD,UACtBrH,QAAS,kBAnBG,SAACqE,GACnB9D,EAAQO,KAAK,oBAAqB,CAChCkC,WACAqC,eACA2B,YACAf,SACA5B,UAamBiD,CAAYjD,WCuDtBkD,GAhFS,WACtB,IAAMhH,EAAUC,cACVqG,EAAWN,cACXlB,EAAewB,EAASL,MAAMnB,aAC9BrC,EAAW6D,EAASL,MAAMxD,SAC1BgE,EAAYH,EAASL,MAAMQ,UAC3Bf,EAASY,EAASL,MAAMP,OACxB5B,EAAQwC,EAASL,MAAMnC,MAPD,EASkBnE,qBATlB,mBASrBsH,EATqB,KASJC,EATI,OAUkBvH,qBAVlB,mBAUrBwH,EAVqB,KAUJC,EAVI,OAWkBzH,qBAXlB,mBAWrB0H,EAXqB,KAWJC,EAXI,OAYJ3H,mBAAS,cAA1B4H,EAZqB,sBAaJ5H,mBAAS,cAA1B6H,EAbqB,sBAcJ7H,mBAAS,cAA1B8H,EAdqB,sBAeN9H,mBAAS,GAAxB+H,EAfqB,sBAgBN/H,mBAAS,GAAxBgI,EAhBqB,sBAiBNhI,mBAAS,GAAxBiI,EAjBqB,oBAmBtBC,EAAY,CAChB,CACEzD,SAAUmD,EACV1E,QAASiF,SAASb,GAClBb,GAAIsB,GAEN,CACEtD,SAAUoD,EACV3E,QAASiF,SAASX,GAClBf,GAAIuB,GAEN,CACEvD,SAAUqD,EACV5E,QAASiF,SAAST,GAClBjB,GAAIwB,IAIF7E,EAAO,uCAAG,8BAAApF,EAAA,+EAEW0D,EAAY,CAAEwG,YAAW/C,iBAFpC,gBAEJpH,EAFI,EAEJA,KACRsC,EAAQO,KAAK,gBAAiB,CAC5BuE,eACA2B,YACAf,SACA5B,QACArB,WACA/E,SATU,gDAYZ,MACE8C,QAAQC,IAAI,KAAIsH,SAbN,yDAAH,qDAiBb,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,CAAW7J,KAAK,yBAChB,kBAAC,EAAD,CAAYA,KAAK,qBAEjB,kBAAC,EAAD,CACEU,KAAK,SACLC,YAAY,oBACZC,SAAU,SAAC4B,GAAD,OAAOwG,EAAmBxG,EAAEC,OAAOC,UAE/C,kBAAC,EAAD,CACEhC,KAAK,SACLC,YAAY,oBACZC,SAAU,SAAC4B,GAAD,OAAO0G,EAAmB1G,EAAEC,OAAOC,UAE/C,kBAAC,EAAD,CACEhC,KAAK,SACLC,YAAY,oBACZC,SAAU,SAAC4B,GAAD,OAAO4G,EAAmB5G,EAAEC,OAAOC,UAE/C,kBAAC,EAAD,CAAc1C,KAAK,SAASuB,QAASsD,MCd5BiF,GA5DW,WACxB,IAAMhI,EAAUC,cACVqG,EAAWN,cACXlB,EAAewB,EAASL,MAAMnB,aAC9B2B,EAAYH,EAASL,MAAMQ,UAC3Bf,EAASY,EAASL,MAAMP,OACxB5B,EAAQwC,EAASL,MAAMnC,MACvBpG,EAAO4I,EAASL,MAAMvI,KAAK2C,SAE3B4H,EAAevK,EAAKwK,gBAAgBC,QAAO,SAACzK,GAChD,OAAOA,EAAKmF,WAGVuF,EAAc,GAClBA,EAAY7H,KAAKmF,EAAOU,IAExB,IAAMiC,EAAQ,uCAAG,sBAAA1K,EAAA,+EAEP2D,EAAW,CACfwD,eACAwD,UAAW7B,EACX5C,QAASuE,EACTG,QAASzE,EAAMsC,GACfyB,UAAWI,EACXO,SAAU9K,EAAKyD,eARJ,OAUbnB,EAAQO,KAAK,eAVA,+CAYb,MACEC,QAAQC,IAAI,KAAIsH,SAbL,wDAAH,qDAkBd,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,CAAW7J,KAAK,2BAChB,kBAAC,GAAD,CACEgD,OAAQxD,EAAKyD,aACbyC,QAASlG,EAAKkG,QACdhF,KAAuB,IAAjBkG,EAAqB,WAAa,UACxCjB,QAAS6B,EAAO9F,SAChBkE,MAAOA,EAAMgD,WAEf,kBAAC,GAAD,MACCmB,EAAaxC,KAAI,SAACgD,EAAYvF,GAAb,OAChB,kBAAC,GAAD,CACEyC,IAAKzC,EACLkB,SAAUqE,EAAW5C,aACrBxB,SAAUoE,EAAW5F,QACrByB,UAAWmE,EAAWC,YACtBnE,KAAK,SAGT,kBAAC,EAAD,CAAcrG,KAAK,OAAOuB,QAAS4I,M,0mBChEzC,IAAMlK,GAAUL,IAAOM,IAAV,MAMPqF,GAAU3F,IAAOM,IAAV,MAUPuK,GAAU7K,IAAOM,IAAV,MA0BEwK,GAhBY,SAAC3K,GAC1B,OACE,kBAAC,GAAD,KACE,gDACA,kBAAC,GAAD,KACE,yCACA,yCAEF,kBAAC0K,GAAD,KACE,4BAAK1K,EAAMqG,WACX,4BAAKrG,EAAM4K,SAAX,c,8WCpCR,IAAM1K,GAAUL,IAAOM,IAAV,MAMPuK,GAAU7K,IAAOM,IAAV,MAqBE0K,GAXkB,SAAC7K,GAChC,OACE,kBAAC,GAAD,KACE,kDACA,kBAAC,GAAD,KACE,4BAAKA,EAAM4K,SAAX,c,+HCrBR,IAAM1K,GAAUL,IAAOM,IAAV,MAcE2K,GARQ,WACrB,OACE,kBAAC,GAAD,KACE,0CCiCSC,GAlCM,WACnB,IAAMhJ,EAAUC,cAGV4C,EAFWmD,cAEQC,MAAMpD,QAE/B,OADArC,QAAQC,IAAIoC,GAEV,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAW3E,KAAI,oBAAe2E,EAAQoG,iBAAvB,cACf,kBAAC,GAAD,CACE3E,UAAWzB,EAAQvC,aACnBuI,SAAUhG,EAAQqG,2BAEpB,kBAAC,GAAD,CACEL,SACEhG,EAAQqG,yBAA2BrG,EAAQsG,4BAG/C,kBAAC,GAAD,MACCtG,EAAQgF,UAAUpC,KAAI,SAACrB,EAAUlB,GAAX,OACrB,kBAAC,GAAD,CACEyC,IAAKzC,EACLkB,SAAUA,EAASA,SACnBC,SAAUD,EAASvB,QACnByB,UAAS,aAAQzB,EAAQoG,kBACzB1E,KAAK,cAIT,kBAAC,EAAD,CAAcrG,KAAK,QAAQuB,QAAS,kBAAMO,EAAQoD,c,mVCrCxD,IAAMgG,GAAetL,IAAOuL,OAAV,MA+CHC,GAhCK,SAACrL,GACnB,OACE,kBAACmL,GAAD,CACExK,KAAMX,EAAMW,KACZC,YAAaZ,EAAMY,YACnBC,SAAUb,EAAMa,UAEhB,4BAAQ8B,MAAO,MAAO3C,EAAMC,MAC3BD,EAAMsL,QAAQ9D,KAAI,SAAC+D,EAAQtG,GAC1B,OACE,4BACEyC,IAAK,SAAWzC,EAChBtC,MACE4I,EAAOtL,KACHsL,EAAOtL,KACPsL,EAAO5J,SACP4J,EAAO5J,SACP4J,GAGLA,EAAOtL,KACJsL,EAAOtL,KACPsL,EAAO5J,SACP4J,EAAO5J,SACP4J,Q,8nBCtChB,IAAMrL,GAAUL,IAAOM,IAAV,MAIPsF,GAAM5F,IAAOM,IAAV,MAOH8F,GAAiBpG,IAAOM,IAAV,MAqCL+F,GAtBE,SAAClG,GAChB,IAAM+B,EAAUC,cAMhB,OACE,kBAAC,GAAD,CACEtB,UAAU,eACVc,QAAS,kBARU0B,EAQUlD,EAAMkD,aAPrCX,QAAQC,IAAIU,QACZnB,EAAQO,KAAR,0BAAgCY,IAFZ,IAACA,IAUnB,kBAAC,GAAD,KACE,kBAAC,GAAD,KAAiBlD,EAAMkD,cACvB,kBAAC,GAAD,KAAiBlD,EAAMwL,cACvB,kBAAC,GAAD,KAAiBxL,EAAM6G,cACvB,kBAAC,GAAD,KAAiB7G,EAAMyL,gB,gbC3C/B,IAAMvL,GAAUL,IAAOM,IAAV,MAKPsF,GAAM5F,IAAOM,IAAV,MAMH2F,GAAYjG,IAAOkG,GAAV,MAkBAC,GAbgB,SAAChG,GAC9B,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,eACA,kBAAC,GAAD,kBACA,kBAAC,GAAD,aACA,kBAAC,GAAD,mB,oaCbR,IAAM0L,GAAY7L,IAAOM,IAAV,MASTwL,GAAU9L,IAAOM,IAAV,MAqMEyL,GA3LO,SAAC5L,GACrB,IAAM+B,EAAUC,cACVqG,EAAWN,cAFc,EAGRrG,mBAAS,CAC9BmK,OAASC,KAAK,EAAG,QAAQC,SACzBF,OAASC,KAAK,EAAG,QAAQC,SACzBF,OAASC,KAAK,EAAG,QAAQC,SACzBF,OAASC,KAAK,EAAG,QAAQC,SACzBF,OAASC,KAAK,EAAG,QAAQC,SACzBF,OAASC,KAAK,EAAG,QAAQC,SACzBF,OAASC,KAAK,EAAG,QAAQC,WAPpBC,EAHwB,sBAaVtK,mBAAS,CAC5BmK,OAASC,IAAI,EAAG,QAAQC,SACxBF,OAASC,IAAI,EAAG,QAAQC,SACxBF,OAASC,IAAI,EAAG,QAAQC,SACxBF,OAASC,IAAI,EAAG,QAAQC,SACxBF,OAASC,IAAI,EAAG,QAAQC,SACxBF,OAASC,IAAI,EAAG,QAAQC,SACxBF,OAASC,IAAI,EAAG,QAAQC,WAPnBE,EAbwB,sBAsBRvK,mBAAS2G,EAASL,MAAMxD,UAAxCf,EAtBwB,sBAuBK/B,mBAAS2G,EAASL,MAAMvD,kBAvB7B,mBAuBxBpB,EAvBwB,KAuBZ6I,EAvBY,OAwBPxK,mBAAS,CAC/ByK,KAAM,KACNC,GAAI,KACJjG,SAAU,KACVoC,QAAS,KACT1B,aAAc,KACdY,OAAQ,KACR4E,YAAa,KACbC,MAAO,OAhCsB,mBAwBxBC,EAxBwB,KAwBlBC,EAxBkB,KAmCzBC,EAAe,SAACC,GAAD,OAAU,SAACC,GAC9BH,EAAQ,6BAAKD,GAAN,mBAAaG,EAAOC,EAAMjK,OAAOC,WAG1CsB,qBAAU,WACM/B,aAAagC,QAAQ,UAEjCnC,EAAQO,KAAK,OAEd,IAgEH,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,CAAWrC,KAAK,mBACfwD,EACC,kBAACiI,GAAD,KACE,kBAAC,GAAD,CACEzL,KAAK,OACLqL,QAASU,EACTnL,SAAU4L,EAAa,UAEzB,kBAAC,GAAD,CACExM,KAAK,KACLqL,QAASW,EACTpL,SAAU4L,EAAa,QAEzB,kBAAC,GAAD,CACExM,KAAK,YACLqL,QAAS7H,EAAamG,UACtB/I,SAAU4L,EAAa,cAEzB,kBAAC,GAAD,CACExM,KAAK,YACLqL,QAAS7H,EAAa6E,UACtBzH,SAAU4L,EAAa,aAEzB,kBAAC,GAAD,CACExM,KAAK,iBACLY,SAAU4L,EAAa,gBACvBnB,QAAS7H,EAAayE,gBAExB,kBAAC,GAAD,CACEjI,KAAK,UACLqL,QAAS7H,EAAamC,QACtB/E,SAAU4L,EAAa,YAEzB,kBAAC,GAAD,CACExM,KAAK,eACLqL,QAAS7H,EAAamJ,MACtB/L,SAAU4L,EAAa,iBAEzB,kBAAC,GAAD,CACExM,KAAK,SACLqL,QAASuB,OAAOC,KAAKrJ,EAAasJ,QAClClM,SAAU4L,EAAa,YAI3B,GAGF,6BACE,kBAACO,GAAD,MACA,kBAACrB,GAAD,KACGtI,EAAW4J,OAAS,EACnB5J,EAAWmE,KAAI,SAAChD,EAAUS,GACxB,OACE,kBAACiI,GAAD,CACExF,IAAK,YAAczC,EACnB/B,aAAcsB,EAAS4C,UACvBoE,aAAcK,KAAOrH,EAAS2I,gBAAgBpB,OAC5C,YAEFlF,aAAcrC,EAASqC,aACvB4E,YAAajH,EAAS+D,QAAQkD,iBAKpC,uBAAG2B,MAAO,CAAEC,UAAW,WAAvB,sBAKN,kBAAC,EAAD,CAAcpN,KAAK,OAAOuB,QAAS,kBAxInB,WAClB,IAAI8L,EAAgBjF,EAASL,MAAMvD,iBAGb,cAAlB8H,EAAKpG,UAA8C,OAAlBoG,EAAKpG,WACxC5D,QAAQC,IAAI,MACZ8K,EAAgBA,EAAcpD,QAAO,SAAC1F,GACpC,OAAOA,EAASiC,cAAc8G,MAC5B,SAACC,GAAD,OAAWA,EAAM5F,eAAiB2E,EAAKpG,gBAKxB,cAAjBoG,EAAKhE,SAA4C,OAAjBgE,EAAKhE,UACvC+E,EAAgBA,EAAcpD,QAC5B,SAAC1F,GAAD,OAAcA,EAAS+D,QAAQkD,cAAgBc,EAAKhE,YAI9B,mBAAtBgE,EAAK1F,cAA2D,OAAtB0F,EAAK1F,eACjDyG,EAAgBA,EAAcpD,QAC5B,SAAC1F,GAAD,OAAcA,EAASqC,eAAiB0F,EAAK1F,iBAI7B,YAAhB0F,EAAK9E,QAAwC,OAAhB8E,EAAK9E,SACpC6F,EAAgBA,EAAcpD,QAAO,SAAC1F,GACpC,OAAOA,EAASoB,QAAQ2H,MACtB,SAAC9F,GAAD,OAAYA,EAAO9F,WAAa4K,EAAK9E,cAKlB,iBAArB8E,EAAKF,aAAuD,OAArBE,EAAKF,cAC9CiB,EAAgBA,EAAcpD,QAC5B,SAAC1F,GAAD,OAAcA,EAAS6H,cAAgBE,EAAKF,gBAI9B,SAAdE,EAAKJ,MAAiC,OAAdI,EAAKJ,OAC/BmB,EAAgBA,EAAcpD,QAAO,SAAC1F,GACpC,OAAOqH,KAAOrH,EAAS2I,gBAAgBM,QAAQlB,EAAKJ,UAIxC,OAAZI,EAAKH,IAA2B,OAAZG,EAAKH,KAC3BkB,EAAgBA,EAAcpD,QAAO,SAAC1F,GACpC,OAAOqH,KAAOrH,EAAS2I,gBAAgBO,SAASnB,EAAKH,QAItC,WAAfG,EAAKD,OAAqC,OAAfC,EAAKD,QAClCgB,EAAgBA,EAAcpD,QAAO,SAAC1F,GAEpC,OADAjC,QAAQC,IAAI+J,EAAKD,OACV9H,EAASiC,cAAc8G,MAC5B,SAACC,GAAD,OAAWA,EAAMG,WAAaC,OAAOrB,EAAKD,cAIhDJ,EAAcoB,GA6E6BO,Q,olBCvM7BhO,IAAOM,IAAV,MAAf,IASMwL,GAAU9L,IAAOM,IAAV,MAUP2N,GAAiBjO,IAAOQ,GAAV,MA2CL0N,GAnCY,WACT/L,cAAhB,IACMqG,EAAWN,cAFc,EAGKrG,mBAAS2G,EAASL,MAAM3E,YAH7B,mBAGxBA,EAHwB,UAK/B,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,CAAWpD,KAAK,wBAChB,kBAAC6N,GAAD,KACGjC,OAASE,OAAO,YACf,OACAF,OAASC,IAAI,EAAG,QAAQC,OAAO,aAGnC,6BACE,kBAACiB,GAAD,MACA,kBAAC,GAAD,KACG3J,EAAWmE,KAAI,SAAChD,EAAUS,GACzB,OACE,kBAACiI,GAAD,CACExF,IAAK,YAAczC,EACnB/B,aAAcsB,EAAStB,aACvBsI,aAAcK,KAAOrH,EAASwJ,eAAejC,OAAO,YACpDlF,aAAcrC,EAASqC,aACvB4E,YAAajH,EAAS+D,iB,+dC1DtC,IAAM0F,GAAsBpO,IAAOM,IAAV,MAOnB+N,GAAkBrO,IAAOM,IAAV,MAgDNgO,GAnCY,WACzB,IAAMpM,EAAUC,cACVqG,EAAWN,cAFc,EAGVrG,mBAAS2G,EAASL,MAAM1E,WAAWlB,UAAjDkB,EAHwB,oBAI/Bf,QAAQC,IAAIc,EAAW,IAQvB,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,CAAWrD,KAAK,wBAChB,kBAAC,EAAD,CAAYA,KAAK,qBAEjB,kBAACgO,GAAD,KACGpB,OAAOC,KAAKxJ,GAAYkE,KAAI,SAACnB,EAAW+H,GAEvC,OADA7L,QAAQC,IAAIc,EAAW8K,EAAQ,IAE7B,kBAACF,GAAD,CACExG,IAAK,aAAe0G,EAAQ,EAC5B5M,QAAS,kBAlBQ,SAAC6E,GAG5BtE,EAAQO,KAAK,iBAAkB,CAAEsC,QAASyB,IAejBgI,CAAqB/K,EAAW8K,EAAQ,MAEtDA,EAAQ,S,8JCxCvB,IAAME,GAAezO,IAAOQ,GAAV,MAgCHkO,GAzBM,WACnB,IAAMxM,EAAUC,cACVqG,EAAWN,cAFQ,EAGerG,mBAAS2G,EAASL,MAAM9E,cAHvC,mBAGlBA,EAHkB,aAIDxB,mBAAS,CAC/B,2BACA,qBACA,wBAHK8M,EAJkB,oBAUzB,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,CAAWvO,KAAK,wBAChB,kBAACqO,GAAD,gBACU,0BAAMlB,MAAO,CAAEqB,MAAO,SAAWvL,GAD3C,uBAIA,kBAAC,EAAD,CAAYjD,KAAK,sBACjB,kBAAC,GAAD,CAAaA,KAAK,gBAAgBqL,QAASkD,IAC3C,kBAAC,EAAD,CAAcvO,KAAK,QAAQuB,QAAS,kBAAMO,EAAQO,KAAK,oBCoB9CoM,GAxCH,WACV,OACE,kBAAC,IAAD,CAAYC,SAAS,KACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAAKC,UAAWrN,IAElC,kBAAC,IAAD,CAAOoN,KAAK,cAAcC,UAAWtL,KAErC,kBAAC,IAAD,CAAOqL,KAAK,kBAAkBC,UAAWnK,KAEzC,kBAAC,IAAD,CAAOkK,KAAK,iBAAiBC,UAAWC,KAExC,kBAAC,IAAD,CAAOF,KAAK,iBAAiBC,UAAWP,KAExC,kBAAC,IAAD,CAAOM,KAAK,gCAAgCC,UAAWtI,KAEvD,kBAAC,IAAD,CAAOqI,KAAK,cAAcC,UAAWhH,KAErC,kBAAC,IAAD,CAAO+G,KAAK,sBAAsBC,UAAW1G,KAE7C,kBAAC,IAAD,CAAOyG,KAAK,iBAAiBC,UAAWrG,KAExC,kBAAC,IAAD,CAAOoG,KAAK,gBAAgBC,UAAWnG,KAEvC,kBAAC,IAAD,CAAOkG,KAAK,oBAAoBC,UAAW/F,KAE3C,kBAAC,IAAD,CAAO8F,KAAK,gBAAgBC,UAAW/E,KAEvC,kBAAC,IAAD,CAAO8E,KAAK,iBAAiBC,UAAW/D,KAExC,kBAAC,IAAD,CAAO8D,KAAK,kBAAkBC,UAAWlD,KAEzC,kBAAC,IAAD,CAAOiD,KAAK,uBAAuBC,UAAWf,KAE9C,kBAAC,IAAD,CAAOc,KAAK,uBAAuBC,UAAWX,QC5ClCa,QACW,cAA7BC,OAAO5G,SAAS6G,UAEe,UAA7BD,OAAO5G,SAAS6G,UAEhBD,OAAO5G,SAAS6G,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzN,QAAQyN,MAAMA,EAAMlG,c","file":"static/js/main.127aff0d.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const setAuthToken = (token) => {\n  axios.defaults.baseURL = 'https://ec2-52-204-71-158.compute-1.amazonaws.com/';\n  axios.defaults.headers.common['Authorization'] = token;\n};\n","import axios from 'axios';\n\nconst url = '/users';\nconst localhost = 'https://ec2-52-204-71-158.compute-1.amazonaws.com';\n\nexport const login = async (data) => {\n  return axios.post(`${localhost}${url}/login`, data);\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledHeader = styled.h3`\n  font-size: 20px;\n  font-weight: 600;\n  text-align: left;\n  color: black;\n\n  margin-left: 1rem;\n  margin-bottom: 20px;\n`;\n\nconst PageHeader = (props) => {\n  return <StyledHeader>{props.name}</StyledHeader>;\n};\nexport default PageHeader;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  position: absolute;\n  top: -70px;\n  left: 0;\n`;\n\nconst StyledPageTitle = styled.h4`\n  position: relative;\n  text-align: center;\n  font-size: 20px;\n  color: white;\n`;\n\nconst PageTitle = (props) => {\n  return (\n    <Wrapper>\n      <StyledPageTitle>{props.name}</StyledPageTitle>\n    </Wrapper>\n  );\n};\n\nexport default PageTitle;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  width: 100%;\n  height: 50px;\n\n  border-radius: 50px;\n  border: 0px;\n  box-shadow: 0px 3px 5px 2px rgba(0, 0, 0, 0.13);\n  font-size: 15px;\n  outline: none;\n  color: #b7b7b7;\n  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n\n  z-index: 5;\n  margin-bottom: 15px;\n  padding-left: 20px;\n`;\n\nconst Input = (props) => {\n  return (\n    <StyledInput\n      className=\"styledInput\"\n      type={props.type}\n      placeholder={props.placeholder}\n      onChange={props.onChange}\n    />\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledDivWrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: #6c49b8;\n`;\n\nconst StyledDiv = styled.div`\n  height: 91%;\n  width: 100%;\n  position: absolute;\n  top: 110px;\n\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-items: center;\n  align-content: center;\n\n  border-radius: 50px;\n  background-color: white;\n  box-shadow: 0px 3px 5px 2px rgba(0, 0, 0, 0.13);\n\n  z-index: 1;\n`;\n\nconst StyledDivContent = styled.div`\n  width: 315px;\n  height: 100%;\n  margin-top: -100px;\n`;\n\nconst Container = (props) => {\n  return (\n    <StyledDivWrapper>\n      <StyledDiv>\n        <StyledDivContent>{props.children}</StyledDivContent>\n      </StyledDiv>\n    </StyledDivWrapper>\n  );\n};\n\nexport default Container;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  width: 100%;\n  height: 50px;\n  border-radius: 50px 50px 0px 0px;\n  background-color: #6c49b8;\n  box-shadow: 0px 3px 5px 2px rgba(0, 0, 0, 0.13);\n  outline: none;\n  color: white;\n  font-size: 20px;\n  border: 0px;\n`;\n\nconst ButtonPosition = styled.div`\n  position: absolute;\n  bottom: 35px;\n  left: 0px;\n  width: 100%;\n`;\n\nconst ButtonWrapper = styled.div`\n  width: 375px;\n  margin: auto;\n`;\n\nconst BottomButton = (props) => {\n  return (\n    <ButtonPosition>\n      <ButtonWrapper>\n        <StyledButton onClick={props.onClick}>{props.name}</StyledButton>\n      </ButtonWrapper>\n    </ButtonPosition>\n  );\n};\n\nexport default BottomButton;\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { setAuthToken } from '../networking/HTTPservice';\r\nimport { login } from '../networking/users';\r\n\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageTitle from '../components/PageTitle';\r\nimport Input from '../components/Input';\r\nimport Container from '../components/Container';\r\nimport BottomButton from '../components/BottomButton';\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  const loginUser = async () => {\r\n    try {\r\n      const { data } = await login({ username, password });\r\n      setAuthToken(data.token);\r\n      localStorage.setItem('token', data.token);\r\n\r\n      if (data.response.warehouse_id === null) {\r\n        history.push('/home-depot');\r\n      } else if (data.response.warehouse_id !== null) {\r\n        history.push('/home-warehouse');\r\n      }\r\n    } catch (err) {\r\n      if (err) {\r\n        console.log('User cannot login.');\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <PageTitle name=\"CheManager\" />\r\n      <PageHeader name=\"Login\" />\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"username\"\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <Input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <BottomButton onClick={loginUser} name=\"Login\" />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import axios from 'axios';\n\nconst url = '/deliveries';\nconst localhost = 'https://ec2-52-204-71-158.compute-1.amazonaws.com';\n\nexport const getDeliveries = async (data) => {\n  return axios.get(`${localhost}${url}/data`, data);\n};\n\nexport const getActualDeliveries = async () => {\n  return axios.get(`${localhost}${url}`);\n};\n\nexport const getUpcomingDeliveries = async () => {\n  return axios.get(`${localhost}/upcomingDeliveries`);\n};\n\nexport const ticket = async (ticketNumber) => {\n  return axios.get(`${localhost}${url}/ticket/${ticketNumber}`);\n};\n\nexport const confirmDepotTicket = async (data) => {\n  console.log(data);\n  return axios.post(`${localhost}${url}/confirm`, data);\n};\n\nexport const checkCreate = async (data) => {\n  return axios.post(`${localhost}${url}/checkCreate`, data);\n};\n\nexport const deliveries = async (data) => {\n  return axios.post(`${localhost}${url}`, data);\n};\n","import axios from 'axios';\n\nconst url = '/warehouses';\nconst localhost = 'https://ec2-52-204-71-158.compute-1.amazonaws.com';\n\nexport const warehouses = async (data) => {\n  return axios.get(`${localhost}${url}`, data);\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  width: 100%;\n  height: 50px;\n\n  color: white;\n  font-size: 18px;\n  background-color: #6c49b8;\n  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n  text-align: left;\n  padding-left: 2rem;\n\n  box-shadow: 0px 3px 5px 2px rgba(0, 0, 0, 0.13);\n  border-radius: 50px;\n  border: 0px;\n  outline: none;\n  margin-bottom: 15px;\n`;\n\nconst Button = (props) => {\n  return <StyledButton onClick={props.onClick}>{props.name}</StyledButton>;\n};\n\nexport default Button;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { getDeliveries } from '../networking/deliveries';\nimport { getActualDeliveries } from '../networking/deliveries';\nimport { getUpcomingDeliveries } from '../networking/deliveries';\nimport { warehouses } from '../networking/warehouses';\nimport { setAuthToken } from '../networking/HTTPservice';\n\nimport Container from '../components/Container';\nimport BottomButton from '../components/BottomButton';\nimport Button from '../components/Button';\nimport PageHeader from '../components/PageHeader';\nimport PageTitle from '../components/PageTitle';\n\nconst HomeDepot = () => {\n  const [deliveryData, setDeliveryData] = useState('');\n  const [actualDeliveryData, setActualDeliveryData] = useState('');\n  const [warehouseData, setWarehouseData] = useState('');\n  const [upcomingDeliveries, setUpcomingDeliveries] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      setAuthToken(token);\n    }\n    getDeliveryData();\n    getWarehouseData();\n    getCorrectDeliveries();\n    getUpcomingTrucks();\n  }, []);\n\n  const getDeliveryData = async () => {\n    try {\n      const { data } = await getDeliveries();\n      setDeliveryData(data);\n      console.log('====================================');\n      console.log('This is delivery ', data.response);\n      console.log('====================================');\n    } catch (err) {\n      if (err) {\n        localStorage.clear();\n        history.push('/');\n      }\n    }\n  };\n\n  const getUpcomingTrucks = async () => {\n    try {\n      const { data } = await getUpcomingDeliveries();\n      setUpcomingDeliveries(data);\n      console.log('====================================');\n      console.log('This is upcoming deliveries ', data);\n      console.log('====================================');\n    } catch (err) {\n      if (err) {\n        // localStorage.clear();\n        // history.push('/');\n      }\n    }\n  };\n\n  const getCorrectDeliveries = async () => {\n    try {\n      const { data } = await getActualDeliveries();\n      setActualDeliveryData(data);\n      console.log('act', data);\n    } catch (err) {\n      if (err) {\n        // localStorage.clear();\n        // history.push('/');\n      }\n    }\n  };\n\n  const getWarehouseData = async () => {\n    try {\n      const { data } = await warehouses();\n      setWarehouseData(data);\n      console.log('====================================');\n      console.log('This is warehouse ', data.response);\n      console.log('====================================');\n    } catch (err) {\n      if (err) {\n        localStorage.clear();\n        history.push('/');\n      }\n    }\n  };\n\n  const checkTicket = () => {\n    history.push('/ticket-number');\n  };\n\n  const createJob = () => {\n    history.push('/create-job', {\n      delivery: deliveryData.response,\n    });\n  };\n\n  const allDeliveries = () => {\n    history.push('/all-deliveries', {\n      delivery: deliveryData.response,\n      actualDeliveries: actualDeliveryData.deliveries,\n    });\n  };\n\n  const goToUpcomingDeliveries = () => {\n    history.push('/upcoming-deliveries', {\n      deliveries: upcomingDeliveries.response,\n    });\n  };\n\n  const warehousesOverview = () => {\n    history.push('/warehouses-overview', {\n      warehouses: warehouseData,\n    });\n  };\n\n  const logoutUser = () => {\n    localStorage.removeItem('token');\n    history.push('/');\n  };\n  return (\n    <Container>\n      <PageTitle name=\"Welcome Depot Worker\" />\n      <PageHeader name=\"Choose action\" />\n      <Button name=\"Upcoming Deliveries\" onClick={goToUpcomingDeliveries} />\n      <Button name=\"Check Ticket\" onClick={checkTicket} />\n      <Button name=\"Create Job\" onClick={createJob} />\n      <Button name=\"Warehouses Overview\" onClick={warehousesOverview} />\n      <Button name=\"All Deliveries\" onClick={allDeliveries} />\n      <BottomButton name=\"Logout\" onClick={logoutUser} />\n    </Container>\n  );\n};\n\nexport default HomeDepot;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { warehouses } from '../networking/warehouses';\nimport { getUpcomingDeliveries } from '../networking/deliveries';\n\nimport Container from '../components/Container';\nimport BottomButton from '../components/BottomButton';\nimport Button from '../components/Button';\nimport PageHeader from '../components/PageHeader';\nimport PageTitle from '../components/PageTitle';\n\nconst HomeWarehouse = () => {\n  const history = useHistory();\n  const [storage, setStorage] = useState('');\n  const [upcomingDeliveries, setUpcomingDeliveries] = useState('');\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      localStorage.clear();\n      history.push('/');\n    }\n    getData();\n    getUpcomingTrucks();\n  }, []);\n\n  const getData = async () => {\n    try {\n      const { data } = await warehouses();\n      setStorage(data.response[0]);\n      console.log('====================================');\n      console.log('This is warehouse ', data.response[0]);\n      console.log('====================================');\n    } catch (err) {\n      if (err) {\n        // localStorage.clear();\n        // history.push('/');\n      }\n    }\n  };\n\n  const getUpcomingTrucks = async () => {\n    try {\n      const { data } = await getUpcomingDeliveries();\n      setUpcomingDeliveries(data);\n      console.log('====================================');\n      console.log('This is upcoming deliveries ', data);\n      console.log('====================================');\n    } catch (err) {\n      if (err) {\n        // localStorage.clear();\n        // history.push('/');\n      }\n    }\n  };\n\n  const checkTicket = () => {\n    history.push('/ticket-number');\n  };\n\n  const checkStorage = () => {\n    history.push('/check-storage', { storage });\n  };\n\n  const logoutUser = () => {\n    localStorage.removeItem('token');\n    history.push('/');\n  };\n\n  const goToUpcomingDeliveries = () => {\n    history.push('/upcoming-deliveries', {\n      deliveries: upcomingDeliveries.response,\n    });\n  };\n  return (\n    <Container>\n      <PageTitle name=\"Welcome Warehouse Worker\" />\n      <PageHeader name=\"Choose action\" />\n      <Button name=\"Upcoming Deliveries\" onClick={goToUpcomingDeliveries} />\n      <Button name=\"Confirm Ticket\" onClick={checkTicket} />\n      <Button name=\"Storage\" onClick={checkStorage} />\n      <BottomButton name=\"Logout\" onClick={logoutUser} />\n    </Container>\n  );\n};\n\nexport default HomeWarehouse;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\n\nconst GoBackStyle = styled.div`\n  position: absolute;\n  top: -70px;\n  z-index: 10;\n`;\n\nconst Arrow = styled.i`\n  border: solid white;\n  border-width: 0 3px 3px 0;\n  display: inline-block;\n  padding: 4px;\n  transform: rotate(135deg);\n`;\n\nconst GoBack = () => {\n  const history = useHistory();\n  return (\n    <GoBackStyle onClick={() => history.goBack()}>\n      <Arrow />\n    </GoBackStyle>\n  );\n};\n\nexport default GoBack;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { setAuthToken } from '../networking/HTTPservice';\n\nimport PageHeader from '../components/PageHeader';\nimport PageTitle from '../components/PageTitle';\nimport Input from '../components/Input';\nimport Container from '../components/Container';\nimport BottomButton from '../components/BottomButton';\nimport GoBack from '../components/GoBack';\n\nconst Ticket = () => {\n  const [ticketNumber, setTicketNumber] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      setAuthToken(token);\n    }\n    // if (!token) {\n    //   history.push('/');\n    // }\n  });\n  const checkTicket = async () => {\n    if (!ticketNumber) {\n      return alert('You need to add a ticket number!');\n    }\n    history.push(`/ticket-details/${ticketNumber}`);\n  };\n\n  return (\n    <Container>\n      <GoBack />\n      <PageTitle name=\"Ticket number\" />\n      <PageHeader name=\"Insert Ticket Number\" />\n      <Input\n        type=\"text\"\n        placeholder=\"Ticket number\"\n        onChange={(e) => setTicketNumber(e.target.value)}\n      />\n      <BottomButton onClick={checkTicket} name=\"Check ticket\" />\n    </Container>\n  );\n};\n\nexport default Ticket;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: auto;\n  margin-top: -180px;\n`;\nconst RowName = styled.div`\n  font-size: 16px;\n  font-weight: 600;\n  color: grey;\n  border-bottom: 1px solid grey;\n`;\n\nconst Row = styled.div`\n  font-size: 13px;\n  color: black;\n  margin-bottom: 10px;\n`;\n\nconst DeliveryTable = (props) => {\n  return (\n    <Wrapper>\n      <RowName>TICKET NUMBER</RowName>\n      <Row>{props.ticket}</Row>\n      <RowName>ARRIVAL</RowName>\n      <Row>{props.arrival}</Row>\n      <RowName>TYPE</RowName>\n      <Row>{props.type}</Row>\n      <RowName>DRIVERS</RowName>\n      <Row>{props.drivers}</Row>\n      <RowName>TRUCK</RowName>\n      <Row>{props.truck}</Row>\n    </Wrapper>\n  );\n};\n\nexport default DeliveryTable;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 315px;\n  height: auto;\n  margin-top: 50px;\n`;\nconst Row = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1.5fr) 1fr;\n  justify-items: center;\n  border-bottom: 1px solid grey;\n`;\nconst TableName = styled.h5`\n  font-size: 10px;\n  color: grey;\n`;\n\nconst ChemicalsDeliveryTable = (props) => {\n  return (\n    <Wrapper>\n      <Row>\n        <TableName>CHEMICAL</TableName>\n        <TableName>QUANTITY</TableName>\n        <TableName>WAREHOUSE</TableName>\n        <TableName>ISLE</TableName>\n      </Row>\n    </Wrapper>\n  );\n};\n\nexport default ChemicalsDeliveryTable;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 315px;\n  height: auto;\n  margin-top: 15px;\n`;\nconst Row = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1.5fr) 1fr;\n  justify-items: center;\n  border-bottom: 1px solid grey;\n`;\n\nconst TableRowStyled = styled.div`\n  font-size: 13px;\n  font-weight: 600;\n  color: black;\n`;\n\nconst TableRow = (props) => {\n  return (\n    <Wrapper>\n      <Row>\n        <TableRowStyled>{props.chemical}</TableRowStyled>\n        <TableRowStyled>{props.quantity} barels</TableRowStyled>\n        <TableRowStyled>{props.warehouse}</TableRowStyled>\n        <TableRowStyled>{props.isle}</TableRowStyled>\n      </Row>\n    </Wrapper>\n  );\n};\n\nexport default TableRow;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nimport { ticket, confirmDepotTicket } from '../networking/deliveries';\nimport { setAuthToken } from '../networking/HTTPservice';\n\nimport PageTitle from '../components/PageTitle';\nimport Container from '../components/Container';\nimport DeliveryTable from '../components/DeliveryTable';\nimport ChemicalsDeliveryTable from '../components/ChemicalsDeliveryTable';\nimport TableRow from '../components/TableRow';\nimport Button from '../components/Button';\nimport GoBack from '../components/GoBack';\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  height: auto;\n  position: absolute;\n  bottom: 80px;\n  left: 0px;\n`;\n\nconst ButtonWrapper = styled.div`\n  width: 315px;\n  margin: auto;\n`;\n\nconst TicketDetails = () => {\n  const [deliveryStock, setDeliveryStock] = useState([]);\n  const [ticketno, setTicketno] = useState('');\n  const [deliveryType, setDeliveryType] = useState('');\n  const [drivers, setDrivers] = useState([]);\n  const [plateNumber, setPlateNumber] = useState('');\n  const [arrival, setArrival] = useState('');\n  const { ticketNumber } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      setAuthToken(token);\n    }\n    getData();\n  }, []);\n\n  const getData = async () => {\n    try {\n      const { data } = await ticket(ticketNumber);\n      console.log(data);\n      setDeliveryStock(data.delivery.deliveryStock);\n      setTicketno(data.delivery.ticket_no);\n      setDeliveryType(data.delivery.deliveryType);\n      setDrivers(data.delivery.drivers);\n      setPlateNumber(data.delivery.truck.plateNumber);\n      setArrival(data.delivery.time);\n    } catch (err) {\n      // localStorage.clear();\n      // history.push('/');\n    }\n  };\n\n  const confirmTicket = async () => {\n    try {\n      const { data } = await confirmDepotTicket({ ticketNumber: ticketno });\n      console.log(data);\n      history.push('/home-depot');\n    } catch (err) {\n      alert(err.response.data.response);\n    }\n  };\n\n  const rejectTicket = async () => {\n    history.push('/reject-ticket', {\n      ticketNumber,\n    });\n  };\n\n  return (\n    <Container>\n      <GoBack />\n      <PageTitle name=\"Delivery Details\" />\n      <DeliveryTable\n        ticket={ticketno}\n        arrival={arrival}\n        type={deliveryType}\n        drivers={drivers.map((driver, i) => (\n          <p key={i}>{driver.firstName}</p>\n        ))}\n        truck={plateNumber}\n      />\n      <ChemicalsDeliveryTable />\n\n      {deliveryStock.map((delivery, i) => (\n        <TableRow\n          key={i}\n          chemical={delivery.chemicalName}\n          quantity={delivery.storage}\n          warehouse={delivery.warehouseNumber}\n          isle=\"5\"\n        />\n      ))}\n      <ButtonContainer>\n        <ButtonWrapper>\n          <Button name=\"Send\" onClick={() => confirmTicket()} />\n          <Button name=\"Reject\" onClick={() => rejectTicket()} />\n        </ButtonWrapper>\n      </ButtonContainer>\n    </Container>\n  );\n};\n\nexport default TicketDetails;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nimport PageHeader from '../components/PageHeader';\nimport PageTitle from '../components/PageTitle';\nimport Container from '../components/Container';\nimport GoBack from '../components/GoBack';\nimport Button from '../components/Button';\n\nconst CreateJob = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const delivery = location.state.delivery;\n\n  const deliveryJob = (deliveryType) => {\n    history.push('/select-company-job/', { deliveryType, delivery });\n  };\n\n  return (\n    <Container>\n      <GoBack />\n      <PageTitle name=\"Create Job\" />\n      <PageHeader name=\"Select type\" />\n      {delivery.deliveryTypes.map((delivery, i) => (\n        <Button\n          key={i}\n          name={delivery.name}\n          onClick={() => deliveryJob(delivery.id)}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default CreateJob;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nimport PageHeader from '../components/PageHeader';\nimport PageTitle from '../components/PageTitle';\nimport Container from '../components/Container';\nimport GoBack from '../components/GoBack';\nimport Button from '../components/Button';\n\nconst SelectCompanyJob = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const deliveryType = location.state.deliveryType;\n  const delivery = location.state.delivery;\n\n  const companyId = (companyID) => {\n    history.push('/select-driver', {\n      delivery,\n      deliveryType,\n      companyID,\n    });\n  };\n\n  return (\n    <Container>\n      <GoBack />\n      <PageTitle name=\"Create Job Company\" />\n      <PageHeader name=\"Select Company\" />\n      {delivery.companies.map((company, i) => (\n        <Button\n          key={i}\n          name={company.name}\n          onClick={() => companyId(company.id)}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default SelectCompanyJob;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nimport PageHeader from '../components/PageHeader';\nimport PageTitle from '../components/PageTitle';\nimport Container from '../components/Container';\nimport GoBack from '../components/GoBack';\nimport Button from '../components/Button';\n\nconst SelectDriver = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const deliveryType = location.state.deliveryType;\n  const delivery = location.state.delivery;\n  const companyID = location.state.companyID;\n\n  const selectDriver = (driver) => {\n    history.push('/select-truck', {\n      delivery,\n      deliveryType,\n      companyID,\n      driver,\n    });\n  };\n\n  return (\n    <Container>\n      <GoBack />\n      <PageTitle name=\"Create Job Driver\" />\n      <PageHeader name=\"Select Driver\" />\n      {delivery.drivers.map((driver, i) => (\n        <Button\n          key={i}\n          name={`Driver: ${driver.username}`}\n          onClick={() => selectDriver(driver)}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default SelectDriver;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nimport PageHeader from '../components/PageHeader';\nimport PageTitle from '../components/PageTitle';\nimport Container from '../components/Container';\nimport GoBack from '../components/GoBack';\nimport Button from '../components/Button';\n\nconst SelectTruck = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const deliveryType = location.state.deliveryType;\n  const delivery = location.state.delivery;\n  const companyID = location.state.companyID;\n  const driver = location.state.driver;\n\n  const selectTruck = (truck) => {\n    history.push('/select-chemicals', {\n      delivery,\n      deliveryType,\n      companyID,\n      driver,\n      truck,\n    });\n  };\n\n  return (\n    <Container>\n      <GoBack />\n      <PageTitle name=\"Create Job Truck\" />\n      <PageHeader name=\"Select Truck\" />\n      {delivery.trucks.map((truck, i) => (\n        <Button\n          key={i}\n          name={`Truck: ${truck.plate_no}`}\n          onClick={() => selectTruck(truck)}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default SelectTruck;\n","import React, { useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { checkCreate } from '../networking/deliveries';\n\nimport PageHeader from '../components/PageHeader';\nimport PageTitle from '../components/PageTitle';\nimport Container from '../components/Container';\nimport GoBack from '../components/GoBack';\nimport BottomButton from '../components/BottomButton';\nimport Input from '../components/Input';\n\nconst SelectChemicals = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const deliveryType = location.state.deliveryType;\n  const delivery = location.state.delivery;\n  const companyID = location.state.companyID;\n  const driver = location.state.driver;\n  const truck = location.state.truck;\n\n  const [chemicalAAmount, setChemicalAAmount] = useState();\n  const [chemicalBAmount, setChemicalBAmount] = useState();\n  const [chemicalCAmount, setChemicalCAmount] = useState();\n  const [chemicalAName] = useState('Chemical A');\n  const [chemicalBName] = useState('Chemical B');\n  const [chemicalCName] = useState('Chemical C');\n  const [chemicalAID] = useState(1);\n  const [chemicalBID] = useState(2);\n  const [chemicalCID] = useState(3);\n\n  const chemicals = [\n    {\n      chemical: chemicalAName,\n      storage: parseInt(chemicalAAmount),\n      id: chemicalAID,\n    },\n    {\n      chemical: chemicalBName,\n      storage: parseInt(chemicalBAmount),\n      id: chemicalBID,\n    },\n    {\n      chemical: chemicalCName,\n      storage: parseInt(chemicalCAmount),\n      id: chemicalCID,\n    },\n  ];\n\n  const getData = async () => {\n    try {\n      const { data } = await checkCreate({ chemicals, deliveryType });\n      history.push('/finalize-job', {\n        deliveryType,\n        companyID,\n        driver,\n        truck,\n        delivery,\n        data,\n      });\n    } catch (err) {\n      if (err) {\n        console.log(err.message);\n      }\n    }\n  };\n  return (\n    <Container>\n      <GoBack />\n      <PageTitle name=\"Create Job Chemicals\" />\n      <PageHeader name=\"Insert Chemicals\" />\n\n      <Input\n        type=\"number\"\n        placeholder=\"Amount Chemical A\"\n        onChange={(e) => setChemicalAAmount(e.target.value)}\n      />\n      <Input\n        type=\"number\"\n        placeholder=\"Amount Chemical B\"\n        onChange={(e) => setChemicalBAmount(e.target.value)}\n      />\n      <Input\n        type=\"number\"\n        placeholder=\"Amount Chemical C\"\n        onChange={(e) => setChemicalCAmount(e.target.value)}\n      />\n      <BottomButton name=\"Insert\" onClick={getData} />\n    </Container>\n  );\n};\n\nexport default SelectChemicals;\n","import React, { useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { deliveries } from '../networking/deliveries';\n\nimport PageTitle from '../components/PageTitle';\nimport Container from '../components/Container';\nimport GoBack from '../components/GoBack';\nimport ChemicalsDeliveryTable from '../components/ChemicalsDeliveryTable';\nimport TableRow from '../components/TableRow';\nimport DeliveryTable from '../components/DeliveryTable';\nimport BottomButton from '../components/BottomButton';\n\nconst FinalizeCreateJob = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const deliveryType = location.state.deliveryType;\n  const companyID = location.state.companyID;\n  const driver = location.state.driver;\n  const truck = location.state.truck;\n  const data = location.state.data.response;\n\n  const filteredData = data.possibleStorage.filter((data) => {\n    return data.storage;\n  });\n\n  let arrayDriver = [];\n  arrayDriver.push(driver.id);\n\n  const sendData = async () => {\n    try {\n      await deliveries({\n        deliveryType,\n        companyId: companyID,\n        drivers: arrayDriver,\n        truckId: truck.id,\n        chemicals: filteredData,\n        ticketNo: data.ticketNumber,\n      });\n      history.push('/home-depot');\n    } catch (err) {\n      if (err) {\n        console.log(err.message);\n      }\n    }\n  };\n\n  return (\n    <Container>\n      <GoBack />\n      <PageTitle name=\"Create Job Information\" />\n      <DeliveryTable\n        ticket={data.ticketNumber}\n        arrival={data.arrival}\n        type={deliveryType === 1 ? 'Delivery' : 'Pick-up'}\n        drivers={driver.username}\n        truck={truck.plate_no}\n      />\n      <ChemicalsDeliveryTable />\n      {filteredData.map((oneStorage, i) => (\n        <TableRow\n          key={i}\n          chemical={oneStorage.chemicalName}\n          quantity={oneStorage.storage}\n          warehouse={oneStorage.warehouseId}\n          isle=\"3\"\n        />\n      ))}\n      <BottomButton name=\"Send\" onClick={sendData} />\n    </Container>\n  );\n};\n\nexport default FinalizeCreateJob;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: auto;\n  margin-top: -230px;\n`;\n\nconst RowName = styled.div`\n  margin-top: 5px;\n  display: grid;\n  color: grey;\n  grid-template-columns: 1fr 1fr;\n  justify-items: center;\n  border-top: 1px solid grey;\n  padding-top: 10px;\n`;\n\nconst RowData = styled.div`\n  margin-top: 5px;\n  padding-bottom: 10px;\n  display: grid;\n  color: black;\n  grid-template-columns: 1fr 1fr;\n  justify-items: center;\n  border-bottom: 1px solid grey;\n`;\n\nconst MaxCapacityStorage = (props) => {\n  return (\n    <Wrapper>\n      <h3>Maximum Capacity</h3>\n      <RowName>\n        <h5>WAREHOUSE</h5>\n        <h5>CAPACITY</h5>\n      </RowName>\n      <RowData>\n        <h4>{props.warehouse}</h4>\n        <h4>{props.capacity} barels</h4>\n      </RowData>\n    </Wrapper>\n  );\n};\n\nexport default MaxCapacityStorage;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: auto;\n  margin-top: 40px;\n`;\n\nconst RowData = styled.div`\n  margin-top: 5px;\n  display: grid;\n  color: black;\n  justify-items: center;\n  padding: 10px 0;\n  border-bottom: 1px solid grey;\n  border-top: 1px solid grey;\n`;\n\nconst AvailableCapacityStorage = (props) => {\n  return (\n    <Wrapper>\n      <h3>Available Capacity</h3>\n      <RowData>\n        <h4>{props.capacity} barels</h4>\n      </RowData>\n    </Wrapper>\n  );\n};\n\nexport default AvailableCapacityStorage;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: auto;\n  margin-top: 40px;\n`;\n\nconst InStockStorage = () => {\n  return (\n    <Wrapper>\n      <h3>In Stock</h3>\n    </Wrapper>\n  );\n};\n\nexport default InStockStorage;\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport Container from '../components/Container';\nimport BottomButton from '../components/BottomButton';\nimport PageTitle from '../components/PageTitle';\nimport MaxCapacityStorage from '../components/MaxCapacityStorage';\nimport AvailableCapacityStorage from '../components/AvailableCapacityStorage';\nimport InStockStorage from '../components/InStockStorage';\nimport TableRow from '../components/TableRow';\n\nconst CheckStorage = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const storage = location.state.storage;\n  console.log(storage);\n  return (\n    <Container>\n      <PageTitle name={`Warehouse ${storage.warehouse_number} Storage`} />\n      <MaxCapacityStorage\n        warehouse={storage.warehouse_id}\n        capacity={storage.warehouse_total_capacity}\n      />\n      <AvailableCapacityStorage\n        capacity={\n          storage.warehouse_total_capacity - storage.warehouse_current_storage\n        }\n      />\n      <InStockStorage />\n      {storage.chemicals.map((chemical, i) => (\n        <TableRow\n          key={i}\n          chemical={chemical.chemical}\n          quantity={chemical.storage}\n          warehouse={`WH ${storage.warehouse_number}`}\n          isle=\"Isle 2\"\n        />\n      ))}\n\n      <BottomButton name=\"Close\" onClick={() => history.goBack()} />\n    </Container>\n  );\n};\n\nexport default CheckStorage;\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSelect = styled.select`\r\n  width: 100%;\r\n  height: 50px;\r\n\r\n  border-radius: 50px;\r\n  border: 0px;\r\n  box-shadow: 0px 3px 5px 2px rgba(0, 0, 0, 0.13);\r\n  font-size: 15px;\r\n  outline: none;\r\n\r\n  z-index: 5;\r\n  margin-bottom: 15px;\r\n  padding-left: 20px;\r\n`;\r\n\r\nconst SelectInput = (props) => {\r\n  return (\r\n    <StyledSelect\r\n      type={props.type}\r\n      placeholder={props.placeholder}\r\n      onChange={props.onChange}\r\n    >\r\n      <option value={null}>{props.name}</option>\r\n      {props.options.map((option, i) => {\r\n        return (\r\n          <option\r\n            key={'option' + i}\r\n            value={\r\n              option.name\r\n                ? option.name\r\n                : option.username\r\n                ? option.username\r\n                : option\r\n            }\r\n          >\r\n            {option.name\r\n              ? option.name\r\n              : option.username\r\n              ? option.username\r\n              : option}\r\n          </option>\r\n        );\r\n      })}\r\n    </StyledSelect>\r\n  );\r\n};\r\n\r\nexport default SelectInput;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 315px;\r\n  height: auto;\r\n`;\r\nconst Row = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1.5fr);\r\n  justify-items: center;\r\n  border-bottom: 1px solid grey;\r\n`;\r\n\r\nconst TableRowStyled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 13px;\r\n  font-weight: 600;\r\n  color: black;\r\n  height: 50px;\r\n  overflow-x: scroll;\r\n  width: 70px;\r\n  margin-right: 10px;\r\n  white-space: nowrap;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst TableRow = (props) => {\r\n  const history = useHistory();\r\n  const onGetDelivery = (ticketNumber) => {\r\n    console.log(ticketNumber);\r\n    history.push(`/ticket-details/${ticketNumber}`);\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      className=\"deliveryItem\"\r\n      onClick={() => onGetDelivery(props.ticketNumber)}\r\n    >\r\n      <Row>\r\n        <TableRowStyled>{props.ticketNumber}</TableRowStyled>\r\n        <TableRowStyled>{props.deliveryDate}</TableRowStyled>\r\n        <TableRowStyled>{props.deliveryType}</TableRowStyled>\r\n        <TableRowStyled>{props.companyName}</TableRowStyled>\r\n      </Row>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TableRow;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 315px;\r\n  height: auto;\r\n  margin-top: 50px;\r\n`;\r\nconst Row = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1.5fr);\r\n  justify-items: center;\r\n  border-bottom: 1px solid grey;\r\n`;\r\nconst TableName = styled.h5`\r\n  font-size: 10px;\r\n  color: grey;\r\n`;\r\n\r\nconst ChemicalsDeliveryTable = (props) => {\r\n  return (\r\n    <Wrapper>\r\n      <Row>\r\n        <TableName>Ticket</TableName>\r\n        <TableName>Scheduled</TableName>\r\n        <TableName>Type</TableName>\r\n        <TableName>Company</TableName>\r\n      </Row>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ChemicalsDeliveryTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport PageTitle from '../components/PageTitle';\r\nimport SelectInput from '../components/SelectInput';\r\nimport Container from '../components/Container';\r\nimport BottomButton from '../components/BottomButton';\r\nimport GoBack from '../components/GoBack';\r\nimport TableRowDeliveries from '../components/TableRowDeliveries';\r\nimport DeliveriesTable from '../components/DeliveriesTable';\r\n\r\nconst FilterBox = styled.div`\r\n  display: grid;\r\n  grid-gap: 1rem;\r\n  grid-template-columns: 1fr 1fr;\r\n  width: 315px;\r\n  height: auto;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst JobsBox = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  width: 315px;\r\n  height: auto;\r\n  max-height: 200px;\r\n  overflow: scroll;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst AllDeliveries = (props) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [fromDateList] = useState([\r\n    moment().add(-1, 'days').format(),\r\n    moment().add(-2, 'days').format(),\r\n    moment().add(-3, 'days').format(),\r\n    moment().add(-4, 'days').format(),\r\n    moment().add(-5, 'days').format(),\r\n    moment().add(-6, 'days').format(),\r\n    moment().add(-7, 'days').format(),\r\n  ]);\r\n\r\n  const [toDateList] = useState([\r\n    moment().add(1, 'days').format(),\r\n    moment().add(2, 'days').format(),\r\n    moment().add(3, 'days').format(),\r\n    moment().add(4, 'days').format(),\r\n    moment().add(5, 'days').format(),\r\n    moment().add(6, 'days').format(),\r\n    moment().add(7, 'days').format(),\r\n  ]);\r\n  const [deliveryData] = useState(location.state.delivery);\r\n  const [deliveries, setDeliveries] = useState(location.state.actualDeliveries);\r\n  const [form, setForm] = useState({\r\n    from: null,\r\n    to: null,\r\n    chemical: null,\r\n    company: null,\r\n    deliveryType: null,\r\n    driver: null,\r\n    caseHandler: null,\r\n    depot: null,\r\n  });\r\n\r\n  const onChangeForm = (prop) => (event) => {\r\n    setForm({ ...form, [prop]: event.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      history.push('/');\r\n    }\r\n  }, []);\r\n\r\n  const onAddFilter = () => {\r\n    let arrayToReturn = location.state.actualDeliveries;\r\n\r\n    // chemicals\r\n    if (form.chemical !== 'Chemicals' && form.chemical !== null) {\r\n      console.log('da');\r\n      arrayToReturn = arrayToReturn.filter((delivery) => {\r\n        return delivery.deliveryStock.some(\r\n          (stock) => stock.chemicalName === form.chemical\r\n        );\r\n      });\r\n    }\r\n\r\n    if (form.company !== 'Companies' && form.company !== null) {\r\n      arrayToReturn = arrayToReturn.filter(\r\n        (delivery) => delivery.company.companyName === form.company\r\n      );\r\n    }\r\n\r\n    if (form.deliveryType !== 'Delivery types' && form.deliveryType !== null) {\r\n      arrayToReturn = arrayToReturn.filter(\r\n        (delivery) => delivery.deliveryType === form.deliveryType\r\n      );\r\n    }\r\n\r\n    if (form.driver !== 'Drivers' && form.driver !== null) {\r\n      arrayToReturn = arrayToReturn.filter((delivery) => {\r\n        return delivery.drivers.some(\r\n          (driver) => driver.username === form.driver\r\n        );\r\n      });\r\n    }\r\n\r\n    if (form.caseHandler !== 'Case handler' && form.caseHandler !== null) {\r\n      arrayToReturn = arrayToReturn.filter(\r\n        (delivery) => delivery.caseHandler === form.caseHandler\r\n      );\r\n    }\r\n\r\n    if (form.from !== 'From' && form.from !== null) {\r\n      arrayToReturn = arrayToReturn.filter((delivery) => {\r\n        return moment(delivery.date_scheduled).isAfter(form.from);\r\n      });\r\n    }\r\n\r\n    if (form.to !== 'To' && form.to !== null) {\r\n      arrayToReturn = arrayToReturn.filter((delivery) => {\r\n        return moment(delivery.date_scheduled).isBefore(form.to);\r\n      });\r\n    }\r\n\r\n    if (form.depot !== 'Depots' && form.depot !== null) {\r\n      arrayToReturn = arrayToReturn.filter((delivery) => {\r\n        console.log(form.depot);\r\n        return delivery.deliveryStock.some(\r\n          (stock) => stock.depot_id === Number(form.depot)\r\n        );\r\n      });\r\n    }\r\n    setDeliveries(arrayToReturn);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <GoBack />\r\n      <PageTitle name=\"All deliveries\" />\r\n      {deliveryData ? (\r\n        <FilterBox>\r\n          <SelectInput\r\n            name=\"From\"\r\n            options={fromDateList}\r\n            onChange={onChangeForm('from')}\r\n          ></SelectInput>\r\n          <SelectInput\r\n            name=\"To\"\r\n            options={toDateList}\r\n            onChange={onChangeForm('to')}\r\n          ></SelectInput>\r\n          <SelectInput\r\n            name=\"Chemicals\"\r\n            options={deliveryData.chemicals}\r\n            onChange={onChangeForm('chemical')}\r\n          ></SelectInput>\r\n          <SelectInput\r\n            name=\"Companies\"\r\n            options={deliveryData.companies}\r\n            onChange={onChangeForm('company')}\r\n          ></SelectInput>\r\n          <SelectInput\r\n            name=\"Delivery types\"\r\n            onChange={onChangeForm('deliveryType')}\r\n            options={deliveryData.deliveryTypes}\r\n          ></SelectInput>\r\n          <SelectInput\r\n            name=\"Drivers\"\r\n            options={deliveryData.drivers}\r\n            onChange={onChangeForm('driver')}\r\n          ></SelectInput>\r\n          <SelectInput\r\n            name=\"Case handler\"\r\n            options={deliveryData.users}\r\n            onChange={onChangeForm('caseHandler')}\r\n          ></SelectInput>\r\n          <SelectInput\r\n            name=\"Depots\"\r\n            options={Object.keys(deliveryData.depots)}\r\n            onChange={onChangeForm('depot')}\r\n          ></SelectInput>\r\n        </FilterBox>\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      <div>\r\n        <DeliveriesTable />\r\n        <JobsBox>\r\n          {deliveries.length > 0 ? (\r\n            deliveries.map((delivery, i) => {\r\n              return (\r\n                <TableRowDeliveries\r\n                  key={'delivery-' + i}\r\n                  ticketNumber={delivery.ticket_no}\r\n                  deliveryDate={moment(delivery.date_scheduled).format(\r\n                    'DD/MM/YY'\r\n                  )}\r\n                  deliveryType={delivery.deliveryType}\r\n                  companyName={delivery.company.companyName}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <p style={{ textAlign: 'center' }}>Sorry no results</p>\r\n          )}\r\n        </JobsBox>\r\n      </div>\r\n\r\n      <BottomButton name=\"Find\" onClick={() => onAddFilter()} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AllDeliveries;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport DatePicker from 'react-datepicker';\r\nimport PageHeader from '../components/PageHeader';\r\n\r\nimport PageTitle from '../components/PageTitle';\r\nimport SelectInput from '../components/SelectInput';\r\nimport Container from '../components/Container';\r\nimport BottomButton from '../components/BottomButton';\r\nimport GoBack from '../components/GoBack';\r\nimport TableRowDeliveries from '../components/TableRowDeliveries';\r\nimport DeliveriesTable from '../components/DeliveriesTable';\r\n\r\nconst FilterBox = styled.div`\r\n  display: grid;\r\n  grid-gap: 1rem;\r\n  grid-template-columns: 1fr 1fr;\r\n  width: 315px;\r\n  height: auto;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst JobsBox = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  width: 315px;\r\n  height: auto;\r\n  max-height: 80vh;\r\n  overflow: scroll;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst StyledTimespan = styled.h4`\r\n  position: relative;\r\n  text-align: center;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  color: white;\r\n`;\r\n\r\nconst UpcomingDeliveries = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [deliveries, setDeliveries] = useState(location.state.deliveries);\r\n\r\n  return (\r\n    <Container>\r\n      <GoBack />\r\n      <PageTitle name=\"Upcoming deliveries\" />\r\n      <StyledTimespan>\r\n        {moment().format('DD-MM-YY') +\r\n          ' to ' +\r\n          moment().add(6, 'days').format('DD-MM-YY')}\r\n      </StyledTimespan>\r\n\r\n      <div>\r\n        <DeliveriesTable />\r\n        <JobsBox>\r\n          {deliveries.map((delivery, i) => {\r\n            return (\r\n              <TableRowDeliveries\r\n                key={'delivery-' + i}\r\n                ticketNumber={delivery.ticketNumber}\r\n                deliveryDate={moment(delivery.dateScheduled).format('DD/MM/YY')}\r\n                deliveryType={delivery.deliveryType}\r\n                companyName={delivery.company}\r\n              />\r\n            );\r\n          })}\r\n        </JobsBox>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpcomingDeliveries;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport PageHeader from '../components/PageHeader';\r\n\r\nimport PageTitle from '../components/PageTitle';\r\nimport Container from '../components/Container';\r\nimport GoBack from '../components/GoBack';\r\n\r\nconst WarehousesContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-row-gap: 1.5rem;\r\n  justify-content: center;\r\n`;\r\n\r\nconst WarehouseButton = styled.div`\r\n  box-shadow: 0px 3px 5px 2px rgba(0, 0, 0, 0.13);\r\n  padding: 1rem;\r\n  border-radius: 50%;\r\n  width: 5rem;\r\n  height: 5rem;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  justify-self: center;\r\n`;\r\n\r\nconst WarehousesOverview = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [warehouses] = useState(location.state.warehouses.response);\r\n  console.log(warehouses[1]);\r\n\r\n  const goToWarehouseStorage = (warehouse) => {\r\n    // console.log(warehouse);\r\n\r\n    history.push('/check-storage', { storage: warehouse });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <GoBack />\r\n      <PageTitle name=\"Warehouses overview\" />\r\n      <PageHeader name=\"Select warehouse\" />\r\n\r\n      <WarehousesContainer>\r\n        {Object.keys(warehouses).map((warehouse, index) => {\r\n          console.log(warehouses[index + 1]);\r\n          return (\r\n            <WarehouseButton\r\n              key={'warehouse-' + index + 1}\r\n              onClick={() => goToWarehouseStorage(warehouses[index + 1])}\r\n            >\r\n              {index + 1}\r\n            </WarehouseButton>\r\n          );\r\n        })}\r\n      </WarehousesContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default WarehousesOverview;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport DatePicker from 'react-datepicker';\r\nimport PageHeader from '../components/PageHeader';\r\n\r\nimport PageTitle from '../components/PageTitle';\r\nimport SelectInput from '../components/SelectInput';\r\nimport Container from '../components/Container';\r\nimport BottomButton from '../components/BottomButton';\r\nimport GoBack from '../components/GoBack';\r\nimport TableRowDeliveries from '../components/TableRowDeliveries';\r\nimport DeliveriesTable from '../components/DeliveriesTable';\r\n\r\nconst RejectHeader = styled.h4`\r\n  font-size: 20px;\r\n  color: black;\r\n  margin-bottom: 10rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst RejectTicket = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [ticketNumber, setTicketNumber] = useState(location.state.ticketNumber);\r\n  const [rejectReasons] = useState([\r\n    'Wrong amount of chemical',\r\n    'Wrong truck number',\r\n    'Wrong company name',\r\n  ]);\r\n\r\n  return (\r\n    <Container>\r\n      <GoBack />\r\n      <PageTitle name=\"Upcoming deliveries\" />\r\n      <RejectHeader>\r\n        The job <span style={{ color: 'gray' }}>{ticketNumber}</span> has been\r\n        rejected.\r\n      </RejectHeader>\r\n      <PageHeader name=\"Select the reason\" />\r\n      <SelectInput name=\"Reject reason\" options={rejectReasons}></SelectInput>\r\n      <BottomButton name=\"Close\" onClick={() => history.push('/home-depot')} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RejectTicket;\r\n","import React from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\n\nimport './App.css';\n\nimport Login from './pages/Login';\nimport HomeDepot from './pages/HomeDepot';\nimport HomeWarehouse from './pages/HomeWarehouse';\nimport TicketNumber from './pages/TicketNumber';\nimport TicketDetails from './pages/TicketDetails';\nimport CreateJob from './pages/CreateJob';\nimport SelectCompanyJob from './pages/SelectCompanyJob';\nimport SelectDriver from './pages/SelectDriver';\nimport SelectTruck from './pages/SelectTruck';\nimport SelectChemicals from './pages/SelectChemicals';\nimport FinalizeCreateJob from './pages/FinalizeCreateJob';\nimport CheckStorage from './pages/CheckStorage';\nimport AllDeliveries from './pages/AllDeliveries';\nimport UpcomingDeliveries from './pages/UpcomingDeliveries';\nimport WarehousesOverview from './pages/WarehousesOverview';\nimport RejectTicket from './pages/RejectTicket';\n\nconst App = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <Switch>\n        <Route exact path=\"/#\" component={Login} />\n\n        <Route path=\"/home-depot\" component={HomeDepot} />\n\n        <Route path=\"/home-warehouse\" component={HomeWarehouse} />\n\n        <Route path=\"/ticket-number\" component={TicketNumber} />\n\n        <Route path=\"/reject-ticket\" component={RejectTicket} />\n\n        <Route path=\"/ticket-details/:ticketNumber\" component={TicketDetails} />\n\n        <Route path=\"/create-job\" component={CreateJob} />\n\n        <Route path=\"/select-company-job\" component={SelectCompanyJob} />\n\n        <Route path=\"/select-driver\" component={SelectDriver} />\n\n        <Route path=\"/select-truck\" component={SelectTruck} />\n\n        <Route path=\"/select-chemicals\" component={SelectChemicals} />\n\n        <Route path=\"/finalize-job\" component={FinalizeCreateJob} />\n\n        <Route path=\"/check-storage\" component={CheckStorage} />\n\n        <Route path=\"/all-deliveries\" component={AllDeliveries} />\n\n        <Route path=\"/upcoming-deliveries\" component={UpcomingDeliveries} />\n\n        <Route path=\"/warehouses-overview\" component={WarehousesOverview} />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}